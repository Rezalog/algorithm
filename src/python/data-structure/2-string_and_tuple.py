"""
문자열

- 큰 따옴표, 작은 따옴표 둘다 문자열
- 백슬래시 이스케이프 적용 가능

- 연산 시
+ : 문자열 연결(Concatenate)
* : 문자열 * 값 일때 값만큼 문자열이 여러번 더해짐

- 인덱싱 및 슬라이싱
: 가능하지만 특정 인덱스 값을 변경할 수 없음(Immutable)

"""
print("Gang " * 3 + "~") # Gang Gang Gang ~
print("ABCDEF"[2:4]) # CD


"""
튜플
: 순서가 있고, 변경 불가능한 데이터 집합
: 리스트와 유사하나 상대적으로 공간 효율적임.

- 튜플을 사용하면 좋은 경우
1. 서로 다른 성질의 데이터를 묶어서 관리해야 할 때
ex1) 최단 경로 알고리즘에서는 (비용, 노드 번호)의 형태(실수, 정수)로 튜플 자료형을 자주 사용
ex2) 학생 정보의 경우 (학번, 성적)

2. 데이터의 나열을 해싱(Hashing)의 키 값으로 사용해야 할 때
=> 튜플은 변경이 안되므로 리스트와 다르게 키 값으로 사용될 수 있음

3. 리스트보다 메모리를 효율적으로 사용해야 할 때


"""

point = (1,2,3,4,5)
print(point[0]) # 1
print(point[1:3]) # (2,3)

# 튜플은 불변이므로 값을 변경할 수 없다.