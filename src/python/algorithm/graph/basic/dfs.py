"""
DFS(Depth-First Search)

# 방문 여부를 확인할 수 있는 list 선언
# graph는 2차원으로 선언
# 풀이는 인덱스별로 인접한 노드들을 돌면서, 
# 그 노드가 방문하지 않았을때 재귀적으로 
# 바로 dfs 함수 호출하여 방문 처리를 하는 것(깊이 우선)
"""
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True 
    print(v, end=' ')
    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]: # graph[1] == [2,3,8]
        if not visited[i]: # visited[2] ==false 이므로 dfs(2) 수행 -> 방문처리, 2번노드에서 다시 인접한 노드 찾음
            dfs(graph, i, visited)

graph = [
    [], # 0번 인덱스는 비워둔다.
    [2,3,8], # 1번 노드는 2,3,8 노드와 인접함
    [1,7], # 2번 노드는 1,7 노드와 인접함
    [1,4,5], # 3번 노드는 1,4,5 노드와 인접함
    [3,5], # 4번 노드는 3,5 노드와 인접함
    [3,4], # 5번 - 3,4
    [7], # 6번 - 7
    [2,6,8], # 7번 - 2,6,8
    [1,7] # 8번 - 1,7
]

# 모든 노드를 방문하지 않은 것으로 처리함을 나타내는 visited
visited = [False] * 9 # 0번 노드는 없으므로 길이가 1더 크게 만듦

# 정의된 dfs 함수 호출
dfs(graph, 1, visited)
