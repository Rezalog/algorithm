/*

1/1                            1개 1번째
- 1/2 2/1                      2개 2,3번째
+ 3/1 2/2 1/3                  3개 4,5,6번째
- 1/4 2/3 3/2 4/1              4개 7,8,9,10번째
+ 5/1 4/2 3/3 2/4 1/5          5개 11,12,13,14,15번째
- 1/6 2/5 3/4 4/3 5/2 6/1 ...  6개 16,17,18,19,20,21번째
            :                           :



*/
const bun = +require('fs').readFileSync('/dev/stdin').toString().trim();
// n번째 수 : 계차수열의 값(a_n의 값)

// n=10 -> 10번째 값 -> n=4
// ex) 5 < 1+2+3 이므로 3번째줄에 있음
// 2/2

// ex) 10 < 1+2+3+4 이므로 4반쩨 줄, 
// 4/1
// 즉 input < n(n+1)/2 에서 n값을 찾고 

// 1 2 4 7 11 16
//  1 2 3 4 5 = fn = n
// an-an-1 = n-1
// a3-a2 = 3-1 = 2

// 계차수열 a1=1, fn = n-1 이면
// An = a1 + sigma(1~n-1) = 1 + n(n-1)/2 = 
// a5 = 1 + 5*4/2 = 11

// const seq = n*(n-1)/2 + 1;  // a_n
const boonsu = [];
let boonmo = 1;
let boonja = 1;

if(n%2===1) {
    // n이 홀수면 +, 1/1 -> 1/2 2/1
    // 앞은 +, 뒤는 -

}
if(n%2===0) {
    // n이 짝수면 -, 1/2 2/1 -> 3/1 2/2 1/3 
    // 첫 시작수는 
    // 앞은 -, 뒤는 +

}
console.log(seq);